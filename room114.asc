// room script file

float thresh = 99.0;

int monsterID;

bool startedSneaking = false;
bool seenByShadowMage = false;

// Whole code may require cleanup.
// Potentially redundant use of monsterIsDead and flags.DolmenQuest

function ApproachHero() {
  cEgo.StopMoving();
  cShadowmagedolm.Walk(cEgo.x + 20, cEgo.y - 10, eBlock, eWalkableAreas);
  cEgo.Walk(78, 144, eBlock, eWalkableAreas);
  flags.DolmenQuest = 2;

  InitCombat();  
}

function ZapHero() {
  /*
  if (!flags.BloodSealVersion && alertLevel < thresh) {
    Display("Illegal attempt to zap hero. Please report this bug");
    return;
  }
  */
  /*
  cShadowmagedolm.FaceCharacter(cEgo);
  cEgo.StopMoving();
  cEgo.FaceCharacter(cShadowmagedolm);
  cBalllightning.ChangeRoom(114, cShadowmagedolm.x,  cShadowmagedolm.y);
  cBalllightning.LockViewOffset(cBalllightning.View, 0, -20);
  cBalllightning.Walk(cEgo.x, cEgo.y, eBlock, eAnywhere);
  cBalllightning.ChangeRoom(-1);
  */
  float scale = IntToFloat(cShadowmagedolm.Scaling) / 100.0;
  int zapPoint = FloatToInt(80.0 * 0.64 * scale);
  
  float hyp = IntToFloat(getEuclideanDistance(cEgo.x,  cEgo.y - 40,  cShadowmagedolm.x + 10,  cShadowmagedolm.y - zapPoint));
  float adj = IntToFloat(abs(cEgo.x - (cShadowmagedolm.x))) + 10.0;
  int opp = abs((cEgo.y - 40) - (cShadowmagedolm.y - zapPoint));
  int angle = FloatToInt(Maths.RadiansToDegrees(Maths.ArcCos(adj / hyp)));
  if (cShadowmagedolm.Loop == 1) {
    angle = minInt(359, maxInt(360 - angle, 1));
  }
  
  //Display("Angle:%d", angle);
  //int x = cShadowmagedolm.x - FloatToInt(adj);
  //int y = cShadowmagedolm.y - zapPoint;
  //oZap.X = cEgo.x + FloatToInt(adj / 2.0);
  oZap.X = cShadowmagedolm.x - FloatToInt(adj) + 10;
  oZap.Y = cEgo.y - zapPoint;
  oZap.Baseline = cShadowmagedolm.y+10;
  Display("X:%d Y:%d",oZap.X, oZap.Y);
  
  cShadowmagedolm.LockViewOffset(SHAD_ZAP, -15, 0);
  cShadowmagedolm.Animate(0, 1, eOnce, eBlock, eForwards);
  
  short img = 2173;

  while (img <= 2182) {
		DynamicSprite *light1 = DynamicSprite.CreateFromExistingSprite(img);
		light1.Rotate(angle);
		light1.Resize(FloatToInt(adj), opp);
		
		oZap.Graphic = light1.Graphic;
		Wait(2);
		light1.Delete();
		img++;
	}

  
  //Display("You waited too long. The shadow mage charged up a big ball of energy and zapped you");
  Display("You got zapped. game over");
  cShadowmagedolm.UnlockView();
  //cEgo.ChangeRoom(cEgo.PreviousRoom);
  SetSneakingMode(0);
  SetRunningMode(0);
  cEgo.ChangeRoom(111, 160, 180);
  gNoisemeter.Visible = false;
}

function KillShadowMage() {
    oLightning.SetView(LIGHTNING_DOLM);
    oLightning.Visible = true;
    cShadowmagedolm.LockViewOffset(8, -9,0);
    cShadowmagedolm.Animate(1, 2, eOnce, eNoBlock, eForwards);
    cShadowmage.Solid = false;
    oLightning.Animate(0, 1, eOnce, eBlock, eForwards);
    oLightning.Visible = false;
//    monsterIsDead = 1;
    StopMusic();
    flags.DolmenQuest = 2;
}
 

//#sectionstart room_a  // DO NOT EDIT OR REMOVE THIS LINE
function room_a() {
  // script for Room: Player enters room (after fadein)
  IsHeroCloseEnough = false;
  seenByShadowMage = false;
  

  
if (flags.DolmenQuest == 1 && flags.Chapter == 2) {
  
  //StopMonsterChasingAll();
  
  SetSneakingMode(0);
  SetRunningMode(0);  
  PlayMusic(14);
  DisplayMessage(4);
  //cShadowmage.ChangeRoom(114, 160, 136);
  //cShadowmage.Loop = 0;
  //enemyHP = cShadowmage.GetProperty("HP");
  //combatmonster = cShadowmage;
  
  if (flags.BloodSealVersion == true) oBloodseal.Visible = true;
  else oBloodseal.Visible = false; 
  
  //gDolmensetup.Visible = true;
  flags.BloodSealVersion = true;
  //mouse.Mode = eModePointer;
}




}
//#sectionend room_a  // DO NOT EDIT OR REMOVE THIS LINE

//#sectionstart room_b  // DO NOT EDIT OR REMOVE THIS LINE
function room_b() {
  // script for Room: Repeatedly execute
  
//if (flags.DolmenQuest == 2 && flags.Chapter == 2 && monsterIsDead == 0) {
  //CombatLoop();
//  UpdateCombatLabels(); 
//}
if (flags.DolmenQuest == 2 && flags.Chapter == 2 &&  cShadowmagedolm.Room == 114) {
  RestoreWalkableArea(1);
  StopMusic();
  cEgo.Walk(cShadowmagedolm.x + 7, cShadowmagedolm.y + 2, eBlock, eWalkableAreas);
  cEgo.LockView(HERO_PICKUP);
  cEgo.Animate(2, 2, eOnce, eBlock, eForwards);
  DisplayMessage(1);
  cEgo.Animate(2, 2, eOnce, eBlock, eBackwards);
  cEgo.AddInventory(iShadowCape);
  cEgo.UnlockView();
  //monsterIsDead = 2;
  flags.DolmenQuest = 3;
  //combatmonster = null;
  gNoisemeter.Visible = false;
}

if (cFlame.Room == cEgo.Room) {
  /*while (cFlame.Room == cEgo.Room) Wait(1);
  DisplayMessage(6);
	if (flags.BloodSealVersion) ZapHero();
	else ApproachHero();
	*/
  
	Character *s = Character.GetAtScreenXY(cFlame.x, cFlame.y);
	
	if (s == cShadowmagedolm) {
		cShadowmagedolm.Loop = 1;
		DisplayMessage(6);
		//ApproachHero();
		if (flags.BloodSealVersion) ZapHero();
		else ApproachHero();
	}
	
}

if (sneakingMode && !startedSneaking) {
  startedSneaking = true;
  gNoisemeter.Visible = true;
}

if (!sneakingMode && startedSneaking) {
  startedSneaking = false;
  gNoisemeter.Visible = false;
}


if (startedSneaking && cEgo.x > 42 && !sneakingMode) {
  //ZapHero();
  alertLevel = 100.0;
}

if (startedSneaking) {
  if (cEgo.Moving) {
    //alertLevel += 0.3;
    float x = (IntToFloat(100 - heroinfo.stealth) / 50.0) * regionNoise;
    alertLevel += x;
    btnAlertLevelMeter.Value = floor(alertLevel);
    if (alertLevel > thresh) {
      //ApproachHero();
      DisplayMessage(18);
      ZapHero();
      return;
    }
    
  }
  else {
    alertLevel -= 0.1;
    btnAlertLevelMeter.Value = floor(alertLevel);
  }
  if (IsCharacterFacing(cShadowmagedolm, cEgo) && startedSneaking && flags.DolmenQuest < 3) {
    DisplayMessage(10);
    ZapHero();
    return;
  }
  
  
}
if (IsTimerExpired(7)==1 && flags.DolmenQuest < 3 && seenByShadowMage == true) {
  cShadowmagedolm.Say("Very well! Prepare to die mortal");
  ZapHero();
}

if (flags.DolmenQuest < 3) {
  if (flags.BloodSealVersion == true) oBloodseal.Visible = true;
  else oBloodseal.Visible = false; 
}
}
//#sectionend room_b  // DO NOT EDIT OR REMOVE THIS LINE

//#sectionstart region1_a  // DO NOT EDIT OR REMOVE THIS LINE
function region1_a() {
  // script for Region 1: Player walks onto region
  
if (seenByShadowMage) return;
  
seenByShadowMage = true;
if (flags.DolmenQuest == 1 && flags.Chapter == 2 && !sneakingMode) {
  cEgo.StopMoving();
  cShadowmagedolm.Loop = 1;
  DisplayMessage(0);
  //ApproachHero();
  if (!flags.BloodSealVersion) { 
		ApproachHero();
	}

  else if (flags.BloodSealVersion) {
		cShadowmagedolm.Say("Begone Mortal!");  
		SetTimer(7, 240);
		
  }
}
}
//#sectionend region1_a  // DO NOT EDIT OR REMOVE THIS LINE

//#sectionstart hotspot1_a  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot1_a() {
  // script for Hotspot 1 (Hotspot 1): Manipulat hotspot
  /*
if (flags.DolmenQuest == 1 && flags.Chapter == 2) {
  
  if (heroinfo.mp >= MANIPULATE_MP) {
    //cManip.Transparency = 100;
    
    RemoveWalkableArea(1);
    region[1].Enabled = false;
    cManip.ChangeRoom(cEgo.Room, cEgo.x, cEgo.y - 50);
    cManip.Baseline = 237;
    cManip.Walk(160, 55, eBlock, eAnywhere);
    cManip.ChangeRoom(-1);
		KillShadowMage();
    
  }
  else DisplayMessage(519);
}
*/
}
//#sectionend hotspot1_a  // DO NOT EDIT OR REMOVE THIS LINE

//#sectionstart room_c  // DO NOT EDIT OR REMOVE THIS LINE
function room_c() {
  // script for Room: Player leaves room

StopMusic();
if (flags.DolmenQuest == 3) cShadowmagedolm.ChangeRoom(-1);  

cShadowmagedolm.Loop = 0;
SetTimer(7,0); // kill the fucking timer

gNoisemeter.Visible = false;
}
//#sectionend room_c  // DO NOT EDIT OR REMOVE THIS LINE

//#sectionstart region2_a  // DO NOT EDIT OR REMOVE THIS LINE
function region2_a() {
  // script for Region 2: Player walks onto region
  regionNoise = 0.0;
}
//#sectionend region2_a  // DO NOT EDIT OR REMOVE THIS LINE

//#sectionstart region2_b  // DO NOT EDIT OR REMOVE THIS LINE
function region2_b() {
  // script for Region 2: Player walks off region
  regionNoise = 1.0;
  
}
//#sectionend region2_b  // DO NOT EDIT OR REMOVE THIS LINE

//#sectionstart region3_a  // DO NOT EDIT OR REMOVE THIS LINE
function region3_a() {
  // script for Region 3: Player walks onto region
  
if (flags.DolmenQuest < 2) ZapHero();
}
//#sectionend region3_a  // DO NOT EDIT OR REMOVE THIS LINE

//#sectionstart region4_a  // DO NOT EDIT OR REMOVE THIS LINE
function region4_a() {
  // script for Region 4: Player walks onto region
  IsHeroCloseEnough = true;
}
//#sectionend region4_a  // DO NOT EDIT OR REMOVE THIS LINE

//#sectionstart region4_b  // DO NOT EDIT OR REMOVE THIS LINE
function region4_b() {
  // script for Region 4: Player walks off region
  IsHeroCloseEnough = false;
}
//#sectionend region4_b  // DO NOT EDIT OR REMOVE THIS LINE

//#sectionstart object1_a  // DO NOT EDIT OR REMOVE THIS LINE
function object1_a() {
  // script for Object 1: Use inventory on object
if (IsHeroCloseEnough) {
  DisplayMessage(8);
  cEgo.LoseInventory(iFlaskNullWater);
  oBloodseal.Visible = false;
  KillShadowMage();
}
else {
  DisplayMessage(9);
}
}
//#sectionend object1_a  // DO NOT EDIT OR REMOVE THIS LINE

//#sectionstart hotspot1_b  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot1_b() {
  // script for Hotspot 1 (Hotspot 1): Look at hotspot
  
if (cShadowmage.Room == 114) {
	if (oBloodseal.Visible == true) DisplayMessage(11);
	else DisplayMessage(15);
}
else DisplayMessage(16);
  
}
//#sectionend hotspot1_b  // DO NOT EDIT OR REMOVE THIS LINE

//#sectionstart object1_c  // DO NOT EDIT OR REMOVE THIS LINE
function object1_c() {
  // script for Object 1: Look at object
  
Display("The seal seems to have been made using fresh blood, for parts of it still trickle off the pillar.");

if (flags.SeenDarkSymbol) {
  Display("You recognise the blood seal as the dark symbol of power that fernin showed you. There is undoubtedly dark magic at work here."); 
}
else {
  Display("You have never seen this symbol yet before and know nothing of it, yet somehow you feel you should.");
}
}
//#sectionend object1_c  // DO NOT EDIT OR REMOVE THIS LINE


//#sectionstart room_d  // DO NOT EDIT OR REMOVE THIS LINE
function room_d() {
  // script for Room: Player enters room (before fadein)
  
if (flags.DolmenQuest <= 1 && flags.Chapter == 2) {
  
  cShadowmagedolm.ChangeRoom(114, 160, 136);
  //monsterID = SpawnEnemyCoords2(1, 160, 136);
  cShadowmagedolm.Loop = 0;
}
else {
  cShadowmagedolm.ChangeRoom(-1);
  oBloodseal.Visible = false;
}
}
//#sectionend room_d  // DO NOT EDIT OR REMOVE THIS LINE

//#sectionstart object1_d  // DO NOT EDIT OR REMOVE THIS LINE
function object1_d() {
  // script for Object 1: Trigger object
  
if (flags.DolmenQuest == 1 && flags.Chapter == 2) {
  
  if (heroinfo.mp >= TRIGGER_MP) {
    //cManip.Transparency = 100;
    
    RemoveWalkableArea(1);
    region[1].Enabled = false;
    //cFetch.ChangeRoom(cEgo.Room, cEgo.x, cEgo.y - 50);
    //cFetch.Baseline = 237;
    //cFetch.Walk(160, 55, eBlock, eAnywhere);
    //cFetch.ChangeRoom(-1);
		KillShadowMage();
    
  }
  else DisplayMessage(519);
}
}
//#sectionend object1_d  // DO NOT EDIT OR REMOVE THIS LINE

function room_LeaveLeft()
{
player.ChangeRoomAutoPosition(111);
}

function room_LeaveRight()
{
player.ChangeRoomAutoPosition(116);
}

function oBloodseal_Interact()
{
DisplayMessage(14);
}

function oBloodseal_UseInv()
{
if (player.ActiveInventory == inventory[73]) {
object1_a();
}
if (player.ActiveInventory == inventory[76]) {
DisplayMessage(13);
}
}
